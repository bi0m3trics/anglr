% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dot3d.R, R/persp3d.R, R/plot3d.R, R/wire3d.R
\name{plot3d}
\alias{plot3d}
\alias{dot3d.Spatial}
\alias{persp3d.TRI}
\alias{persp3d}
\alias{persp3d.TRI0}
\alias{persp3d.DEL}
\alias{persp3d.DEL0}
\alias{persp3d.QUAD}
\alias{persp3d.matrix}
\alias{persp3d.sf}
\alias{persp3d.Spatial}
\alias{plot3d.TRI}
\alias{plot3d.TRI0}
\alias{plot3d.DEL}
\alias{plot3d.DEL0}
\alias{plot3d.QUAD}
\alias{plot3d.matrix}
\alias{plot3d.BasicRaster}
\alias{plot3d.sc}
\alias{plot3d.SC}
\alias{plot3d.SC0}
\alias{plot3d.PATH}
\alias{plot3d.sf}
\alias{plot3d.sfc}
\alias{plot3d.Spatial}
\alias{plot3d.trip}
\alias{plot3d.ARC}
\alias{wire3d.sc}
\alias{wire3d}
\alias{wire3d.TRI}
\alias{wire3d.TRI0}
\alias{wire3d.DEL}
\alias{wire3d.DEL0}
\alias{wire3d.QUAD}
\alias{wire3d.matrix}
\alias{wire3d.sf}
\alias{wire3d.Spatial}
\alias{wire3d.triangulation}
\alias{wire3d.trip}
\alias{wire3d.BasicRaster}
\title{3D object plot}
\usage{
\method{dot3d}{Spatial}(x, ...)

\method{persp3d}{TRI}(x, ...)

\method{persp3d}{TRI0}(x, ..., add = FALSE)

\method{persp3d}{DEL}(x, ..., add = FALSE)

\method{persp3d}{DEL0}(x, ...)

\method{persp3d}{QUAD}(x, ..., add = FALSE)

\method{persp3d}{QUAD}(x, ..., add = FALSE)

\method{persp3d}{matrix}(x, ..., add = FALSE)

\method{persp3d}{sf}(x, ..., add = FALSE)

\method{persp3d}{Spatial}(x, ..., add = FALSE)

\method{plot3d}{TRI}(x, ...)

\method{plot3d}{TRI0}(x, ...)

\method{plot3d}{DEL}(x, ...)

\method{plot3d}{DEL0}(x, ...)

\method{plot3d}{QUAD}(x, ...)

\method{plot3d}{matrix}(x, ...)

\method{plot3d}{BasicRaster}(x, ...)

\method{plot3d}{sc}(x, ...)

\method{plot3d}{SC}(x, ..., add = FALSE)

\method{plot3d}{SC0}(x, ..., add = FALSE)

\method{plot3d}{PATH}(x, ..., add = FALSE)

\method{plot3d}{sf}(x, ..., add = FALSE)

\method{plot3d}{sfc}(x, ..., add = FALSE)

\method{plot3d}{Spatial}(x, ..., add = FALSE)

\method{plot3d}{trip}(x, ..., add = FALSE)

\method{plot3d}{ARC}(x, ..., add = FALSE)

\method{wire3d}{sc}(x, ...)

\method{wire3d}{TRI}(x, ...)

\method{wire3d}{TRI0}(x, ..., add = FALSE)

\method{wire3d}{DEL}(x, ..., add = FALSE)

\method{wire3d}{DEL0}(x, ...)

\method{wire3d}{QUAD}(x, ..., add = FALSE)

\method{wire3d}{QUAD}(x, ..., add = FALSE)

\method{wire3d}{matrix}(x, ..., add = FALSE)

\method{wire3d}{sf}(x, ..., add = FALSE)

\method{wire3d}{Spatial}(x, ..., add = FALSE)

\method{wire3d}{triangulation}(x, ..., add = FALSE)

\method{wire3d}{trip}(x, ..., add = FALSE)

\method{wire3d}{BasicRaster}(x, ..., add = FALSE)
}
\arguments{
\item{x}{silicate model, SC, TRI, ARC, or PATH}

\item{...}{passed to material properties}

\item{add}{add to plot or not}
}
\value{
rgl shape3d types (note that "segment3d" is currently an imaginary
shape3d type)
}
\description{
This is the workhorse function for anglr, the idea is that just about
anything can be plotted in a 3D scene, polygons, lines, rasters, matrix.
These objects from sp, sf, raster, trip, and silicate should all work.
}
\details{
The function \code{\link[=plot3d]{plot3d()}} the full suite of mesh and linear type plotting
functions from \code{\link[rgl:plot3d]{rgl::plot3d()}}. This main function includes a broader family
of \code{\link[=dot3d]{dot3d()}}, \code{\link[=wire3d]{wire3d()}}, and \code{\link[=persp3d]{persp3d()}} and each works with matrix, raster,
sf, sp, trip, RTriangle, and silicate models. Each of the mesh-surface forms
rely on \code{\link[=as.mesh3d]{as.mesh3d()}} conversion behind the scenes, whereas \code{\link[=plot3d]{plot3d()}} for
the linear types (sf, sp, trip, and from silicate SC, SC0, PATH, PATH0, and
ARC0) all are plotted using rgl segments without going through a triangulated
surface form. This reflects their underlying topology when it comes to 3D
visualization and analysis.

If the scene looks funny the aspect ratio might be poor, we've decided not to
automatically update this with normal plots, but running \code{auto_3d()} will
attempt to set a reasonable aspect ratio. It can also be used to set
exaggerations in different axes.

For SC edges are matched to their object/s. One object's properties is
applied as colour. If \code{color_} column is present on the data object table it
is used.
}
\examples{
library(silicate)
x <- SC(sf::read_sf(system.file("shape", "nc.shp", package = "sf")) \%>\%
   dplyr::mutate(color_ = rainbow(100)))
plot3d(x)

## plot3d anything
plot3d(volcano)
wire3d(volcano)
dot3d(volcano)

plot3d(cad_tas)
persp3d(cad_tas)
wire3d(cad_tas)
dot3d(cad_tas)

## add Z elevation to an sf polygon in a mesh
plot3d(copy_down(as.mesh3d(silicate::minimal_mesh), raster::raster(volcano)))
}
