% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/persp3d.R, R/plot3d.R
\name{plot3d}
\alias{plot3d}
\alias{persp3d.TRI}
\alias{persp3d}
\alias{persp3d.TRI0}
\alias{persp3d.DEL}
\alias{persp3d.DEL0}
\alias{persp3d.QUAD}
\alias{persp3d.matrix}
\alias{plot3d.TRI}
\alias{plot3d.TRI0}
\alias{plot3d.DEL}
\alias{plot3d.DEL0}
\alias{plot3d.QUAD}
\alias{plot3d.matrix}
\alias{plot3d.BasicRaster}
\alias{plot3d.sc}
\alias{plot3d.SC}
\alias{plot3d.SC0}
\alias{plot3d.PATH}
\alias{plot3d.sf}
\alias{plot3d.sfc}
\alias{plot3d.Spatial}
\alias{plot3d.trip}
\alias{plot3d.ARC}
\title{3D object plot}
\usage{
\method{persp3d}{TRI}(x, ..., add = FALSE)

\method{persp3d}{TRI0}(x, ..., add = FALSE)

\method{persp3d}{DEL}(x, ..., add = FALSE)

\method{persp3d}{DEL0}(x, ..., add = FALSE)

\method{persp3d}{QUAD}(x, ..., add = FALSE)

\method{persp3d}{QUAD}(x, ..., add = FALSE)

\method{persp3d}{matrix}(x, ..., add = FALSE)

\method{plot3d}{TRI}(x, ...)

\method{plot3d}{TRI0}(x, ...)

\method{plot3d}{DEL}(x, ...)

\method{plot3d}{DEL0}(x, ...)

\method{plot3d}{QUAD}(x, ...)

\method{plot3d}{matrix}(x, ...)

\method{plot3d}{BasicRaster}(x, ...)

\method{plot3d}{sc}(x, ...)

\method{plot3d}{SC}(x, ..., add = FALSE)

\method{plot3d}{SC0}(x, ..., add = FALSE)

\method{plot3d}{PATH}(x, ..., add = FALSE)

\method{plot3d}{sf}(x, ..., add = FALSE)

\method{plot3d}{sfc}(x, ..., add = FALSE)

\method{plot3d}{Spatial}(x, ..., add = FALSE)

\method{plot3d}{trip}(x, ..., add = FALSE)

\method{plot3d}{ARC}(x, ..., add = FALSE)
}
\arguments{
\item{x}{silicate model, SC, TRI, ARC, or PATH}

\item{...}{passed to material properties}

\item{add}{add to plot or not}
}
\value{
rgl shape3d types (note that "segment3d" is currently an imaginary shape3d type)
}
\description{
For SC edges are matched to their object/s. One object's properties is applied as colour.
If \code{color_} column is present on the data object table it is used.
}
\examples{
library(silicate)
x <- SC(sf::read_sf(system.file("shape", "nc.shp", package = "sf")) \%>\%
   dplyr::mutate(color_ = rainbow(100)))
plot3d(x)
}
